# description of this workflow, can be anything you want
name: RequestWagoData

# we need to let GitHub know _when_ we want to release, typically only when we create a new tag.
# this will target only tags, and not all pushes to the master branch.
# this part can be heavily customized to your liking, like targeting only tags that match a certain word,
# other branches or even pullrequests.
on:
  workflow_dispatch: 
   

# a workflow is built up as jobs, and within these jobs are steps
jobs:

  # "request" is a job, you can name it anything you want
  Request:

    # we can run our steps on pretty much anything, but the "ubuntu-latest" image is a safe bet
    runs-on: ubuntu-latest

    # specify the environment variables used by the packager, matching the secrets from the project on GitHub
    env:
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}  # "GITHUB_TOKEN" is a secret always provided to the workflow
                                                 # for your own token, the name cannot start with "GITHUB_"

    # "steps" holds a list of all the steps needed
    steps:
      - name: Clone project
        uses: actions/checkout@v3
        
      - name: fetchData
        uses: JamesIves/fetch-api-data-action@v2
        id: fetch-api-data
        with:
          endpoint: https://data.wago.io/lookup/wago?id=RaidAbilityTimeline
          save-name: RaidAbilityTimeline      
      - name: print result
        run: "echo ${{steps.fetch-api-data.outputs.fetch-api-data}}"
        
      - id: set_var
        run: |
          content=`cat ${{steps.fetch-api-data.outputs.fetch-api-data[0]}}`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "${{fromJson(steps.set_var.outputs.packageJson).viewCount}}"
          
      - name: Build and Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
           branch: main # Pushes the updates to the main branch.
           folder: fetch-api-data-action/ # The location of the data.json file saved by the Fetch API Data action.
           target-folder: CrossOriginStuff/WeakAuras/ # Saves the data into the directory on the main branch.     
